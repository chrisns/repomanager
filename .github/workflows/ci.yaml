name: ci

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          node-version-file: ".nvmrc"

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: node_modules
          key: npm-${{ hashFiles('package-lock.json') }}

      - name: NPM Install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install

      - name: NPM Lint
        run: npm run lint

      - name: Test
        run: npm run test

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}


      - name: Tar files
        run: tar -cf dist.tar ./

      - uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # v4.0.0
        with:
          name: dist.tar
          path: dist.tar

      - name: Package
        run: ./node_modules/.bin/serverless package
        env:
          GITHUB_WEBHOOK_SECRET: foobar
          APP_ID: foo
          CERT: blah

  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    needs:
      - build
    if: ${{ github.ref == 'refs/heads/master' }}

    steps:
      - uses: actions/download-artifact@7a1cd3216ca9260cd8022db641d960b1db4d1be4 # v4.0.0
        with:
          name: dist.tar
      - run: tar -xf dist.tar

      - name: Package
        run: ./node_modules/.bin/serverless package
        env:
          GITHUB_WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
          APP_ID: ${{ secrets.APP_ID }}
          CERT: ${{ secrets.CERT }}

      - uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a # v4
        with:
          role-to-assume: arn:aws:iam::557195821817:role/repomanager-update
          role-session-name: repomanagerupdate
          aws-region: eu-west-2

      - name: Deploy
        run: ./node_modules/.bin/serverless deploy
        env:
          GITHUB_WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
          APP_ID: ${{ secrets.APP_ID }}
          CERT: ${{ secrets.CERT }}
